---
// Libs, types
import { type CollectionEntry, getCollection } from "astro:content";
import { formatDateYMD, dateToYMD } from "@lib/date";

// Components, layouts
import Base, { author } from "@layouts/Base.astro";
import NextPost from "@components/NextPost.astro";

// CollectionEntry has data (frontmatter) and content types for a collection.
// We add slug as a custom property
type Props = CollectionEntry<"posts">["data"] & {
	slug?: string;
	description?: string;
};

const { title, pubDate, slug, lang, description } = Astro.props;
---

<Base lang={lang} slug={slug} description={description}>
	<Fragment slot="meta">
		<meta name="article:published_time" content={dateToYMD(pubDate)} />
	</Fragment>
	<article itemscope itemtype="http://schema.org/BlogPosting">
		<header>
			<h1 itemprop="headline">{title}</h1>
			<div class="byline vcard">
				<address class="visually-hidden author">
					By <a rel="author" class="url fn n" href="/">{author}</a>
				</address>
				<time itemprop="datePublished" datetime={dateToYMD(pubDate)}>
					{formatDateYMD(pubDate)}
				</time>
			</div>
		</header>
		<div class="markdown-content">
			<slot />
		</div>
	</article>
	<hr />
	{slug && <NextPost slug={slug} />}
</Base>

<style>
	h1 {
		display: inline;
		font-variation-settings: "wght" 900;
		margin-block-end: var(--sp-tiny);
	}
	.byline {
		font-size: var(--fs-small);
		margin-block-end: var(--sp-tiny);
	}
	article {
		padding-block-start: var(--sp-double);
	}
	header {
		margin-block-end: var(--sp-double);
	}
	hr {
		margin-block: var(--sp-large) var(--sp-default);
	}
</style>
